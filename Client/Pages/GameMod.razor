@page "/gamemod"
@page "/gamemod/{id:int}"
@inject IGameService GameService


@if(ID == null)
{
    <PageTitle>Create New Game</PageTitle>
    <h3 style ="color:white">Create New Game</h3>
}
else
{
    <PageTitle>Edit Game @game.GameID</PageTitle>
    <h3 style="color:white">Edit Game @game.GameID</h3>
}

<EditForm Model="game" OnSubmit="HandleSubmit">
        <div>
        <label style="color:white" for="date">Date</label>
        <InputDate TValue="DateTime" id="date" @bind-Value="game.Date" class="form-control"></InputDate>
    </div>
        <div>
        <label style="color:white" for="betamount">Bet Amount</label>
        <InputNumber @bind-Value="game.BetAmount" class="form-control"></InputNumber>
    </div>
    <div>
        <label style="color:white" for="win">Win</label>
        <InputCheckbox id="win" @bind-Value="game.Win" class="form-control"></InputCheckbox>
    </div>
    <div>
        <label style="color:white">Player</label><br />
        <InputSelect @bind-Value="game.PlayerID" class="form-select">
            @foreach(var player in GameService.Players)
            {
                <option value="@player.PlayerID">@player.Username</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteGame">Delete Game</button>
</EditForm>

@code {
    [Parameter]
    public int? ID { get; set; }

    string btnText = string.Empty;

    Game game = new Game { Player = new Player() };

    protected override async Task OnInitializedAsync()
    {
        btnText = ID == null ? "Save New Game" : "Update Game";
        await GameService.GetPlayers();
    }

    protected override async Task OnParametersSetAsync()
    {
        if(ID == null)
        {
            game.Player = GameService.Players[0];
            game.PlayerID = game.Player.PlayerID;
        }
        else
        {
            game = await GameService.GetSingleGame((int)ID);
        }
    }

    async Task HandleSubmit()
    {
        if(ID == null)
        {
            await GameService.CreateGame(game);
        }
        else
        {
            await GameService.UpdateGame(game);
        }
    }

    async Task DeleteGame()
    {
        await GameService.DeleteGame(game.GameID);
    }
}
